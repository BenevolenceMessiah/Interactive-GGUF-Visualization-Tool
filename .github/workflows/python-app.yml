name: Python Application CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
        # Required because we need docker-in-docker
        # Using a separate step to install Docker CLI
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade --force-reinstall torch==2.2.0 --index-url https://download.pytorch.org/whl/cu121
        pip install -r requirements.txt

    - name: Clone llama-cpp-python repository
      run: |
        git clone https://github.com/abetlen/llama-cpp-python.git
        cd llama-cpp-python
        LLAMA_CUBLAS=1 pip install .
        cd ..

    - name: Install Docker CLI
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        sudo usermod -aG docker $USER
        newgrp docker

    - name: Build Docker image
      run: |
        docker build -t gguf-visualization-tool .

    - name: Run Unit Tests
      run: |
        python -m unittest discover tests

    - name: Test Jupyter Notebook
      run: |
        pip install nbconvert
        jupyter nbconvert --to notebook --execute interactive_gguf_visualization_tool.ipynb --output test_notebook.ipynb

    - name: Test Docker Container
      run: |
        # Run the Docker container in detached mode
        docker run --gpus all -d -p 7934:7934 --name gguf_test_container gguf-visualization-tool
        
        # Wait for a few seconds to let the container initialize
        sleep 10
        
        # Check if the container is running
        docker ps | grep gguf_test_container
        
        # Optionally, you can perform additional checks like sending HTTP requests to the running Gradio server
        curl -sSf http://localhost:7934 || exit 1

    - name: Clean up Docker Container
      if: always()
      run: |
        docker stop gguf_test_container || true
        docker rm gguf_test_container || true
